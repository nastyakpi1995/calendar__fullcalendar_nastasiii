{"version":3,"sources":["CommentItem.js","CommentsList.js","PostItem.js","ListOfPosts.js","loadData.js","App.js","index.js"],"names":["CommentItem","_ref","comment","comments","react_default","a","createElement","className","body","CommentsList","state","commentsAreVisible","this","setState","prevState","_this2","_this$props","props","handleSubmit","handleChange","type","onClick","togleComments","onSubmit","htmlFor","placeholder","onChange","value","name","map","commentu","src_CommentItem_0","key","id","React","Component","PostItem","activeRename","title","_this","post","postItem","handleStart","event","preventDefault","renamePosts","handleRename","_event$target","target","Object","defineProperty","_this$state","_this$props2","addComment","handlePostRemote","Fragment","src_CommentsList_0","postComments","ListOfPosts","postsMap","_objectSpread","posts","src_PostItem_0","loadPosts","asyncToGenerator","regenerator_default","mark","_callee","loadedData","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","apply","arguments","loadComments","_ref2","_callee2","_context2","App","isLoaded","isLoading","handleClick","WhitpostAndComments","filter","postId","setTimeout","newTitle","toConsumableArray","App_objectSpread","addPost","concat","Date","now","operation","currentArray","obj","src_ListOfPosts_0","Button","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.2c4fda28.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CommentItem.css';\n\nconst CommentItem = ({ comment, comments }) => (\n  <div className=\"comments__item\">\n    <p className=\"comments__item__body\">\n      {comment.body ? comment.body : comments}\n    </p>\n  </div>\n);\n\nCommentItem.propTypes = {\n  // eslint-disable-next-line react/forbid-prop-types\n  comments: PropTypes.object.isRequired,\n  comment: PropTypes.shape({\n    name: PropTypes.string,\n    body: PropTypes.string,\n  }).isRequired,\n};\n\nexport default CommentItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './CommentsList.css';\nimport CommentItem from './CommentItem';\n\nclass CommentsList extends React.Component {\n  state = {\n    commentsAreVisible: false,\n  };\n\n  togleComments() {\n    this.setState(prevState => ({\n      commentsAreVisible: !prevState.commentsAreVisible,\n    }));\n  }\n\n  render() {\n    const {\n      comments, handleSubmit, handleChange, comment,\n    } = this.props;\n    const { commentsAreVisible } = this.state;\n\n    return (\n      <div>\n        {\n          <button\n            className=\"show-comments-btn\"\n            type=\"button\"\n            onClick={() => {\n              this.togleComments(true);\n            }}\n          >\n            {\n              commentsAreVisible\n                ? 'Скрыть комментарии'\n                : 'Показать комментарии'\n            }\n          </button>\n        }\n        {\n          commentsAreVisible\n          && comments && (\n            <div className=\"comments\">\n              <form onSubmit={handleSubmit}>\n                <label\n                  className=\"new-todo\"\n                  htmlFor=\"new-todo-title\"\n                >\n                  <input\n                    className=\"new-todo\"\n                    placeholder=\"What needs to be done?\"\n                    onChange={handleChange}\n                    value={comment}\n                    name=\"comment\"\n                    type=\"text\"\n                  />\n                </label>\n                <button\n                  type=\"submit\"\n                  className=\"buttonHide\"\n                >\n          submit\n                </button>\n              </form>\n              {\n                comments ? comments.map(commentu => (\n                  <CommentItem\n                    comment={commentu}\n                    key={commentu.id}\n                    comments={comments}\n                  />\n                ))\n                  : ''\n              }\n            </div>\n          )\n        }\n      </div>\n    );\n  }\n}\n\nCommentsList.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  comment: PropTypes.string.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  comments: PropTypes.object.isRequired,\n};\n\nexport default CommentsList;\n","/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable react/jsx-max-props-per-line */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable max-len */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './PostItem.css';\nimport CommentList from './CommentsList';\n\nclass PostItem extends React.Component {\n  state = {\n    activeRename: false,\n    title: this.props.post.postItem.title,\n  }\n\n  handleStart = () => {\n    this.setState({\n      activeRename: true,\n    });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { renamePosts, post } = this.props;\n\n    renamePosts(this.state.title, post.postItem.id);\n    this.setState({\n      activeRename: false,\n    });\n  }\n\n  handleRename = (event) => {\n    const { value, name } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    const { activeRename, title } = this.state;\n    const {\n      post, addComment, handleSubmit, comment, handleChange, handlePostRemote,\n    } = this.props;\n\n    return (\n      <div className=\"post__container\">\n        {\n          activeRename\n            ? (\n              <form\n                onSubmit={this.handleSubmit}\n              >\n                <input\n                  name=\"title\"\n                  type=\"text\"\n                  onChange={this.handleRename}\n                  value={title}\n                  className=\"new-todo\"\n                />\n              </form>\n            ) : (\n              <>\n                <article className=\"post\">\n                  <h2\n                    onClick={this.handleStart}\n                    className=\"post__title\"\n                  >\n                    {post.postItem.title ? post.postItem.title : post.postItem}\n\n                  </h2>\n                  <p>{post.postItem.body}</p>\n                  <button\n                    type=\"button\"\n                    onClick={() => handlePostRemote(post.postItem.id, 'remove')}\n                    className=\"basketPage__table-quantity-remove\"\n                  >\n      x\n                  </button>\n                </article>\n                <CommentList comments={post.postComments} addComment={addComment} handleSubmit={handleSubmit} handleChange={handleChange} comment={comment} />\n              </>\n            )}\n      </div>\n    );\n  }\n}\n\nPostItem.propTypes = {\n  post: PropTypes.shape({\n    postItem: PropTypes.shape({\n      title: PropTypes.string,\n      body: PropTypes.string,\n    }),\n    postAuthor: PropTypes.object,\n    postComments: PropTypes.object,\n  }).isRequired,\n  renamePosts: PropTypes.func.isRequired,\n  addComment: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  comment: PropTypes.shape.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handlePostRemote: PropTypes.func.isRequired,\n};\n\nexport default PostItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './ListOfPosts.css';\nimport PostItem from './PostItem';\n\nclass ListOfPosts extends React.Component {\n  state = {\n    postsMap: {\n      title: '',\n      comment: '',\n      body: '',\n    },\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { onSubmit } = this.props;\n    const { postsMap } = this.state;\n\n    onSubmit(postsMap);\n\n    this.setState({\n      postsMap: {\n        comment: '',\n        title: '',\n      },\n    });\n  }\n\n    handleChange = (event) => {\n      const { name, value } = event.target;\n\n      this.setState(({ postsMap }) => ({\n        postsMap: {\n          ...postsMap,\n          [name]: value,\n        },\n      }));\n    }\n\n    render() {\n      const { posts, handlePostRemote, renamePosts } = this.props;\n      const { postsMap } = this.state;\n\n      return (\n        <div className=\"posts-list\">\n          <form onSubmit={this.handleSubmit}>\n            <label\n              className=\"new-todo\"\n              htmlFor=\"new-todo-title\"\n            >\n              <input\n                className=\"search-post__input\"\n                placeholder=\"enter post\"\n                onChange={this.handleChange}\n                value={postsMap.title}\n                name=\"title\"\n                type=\"text\"\n              />\n            </label>\n            <button\n              type=\"submit\"\n              className=\"buttonHide\"\n            >\n          submit\n            </button>\n          </form>\n          <div className=\"posts\">\n            {\n              posts.map(post => (\n                <PostItem\n                  renamePosts={renamePosts}\n                  handlePostRemote={handlePostRemote}\n                  post={post}\n                  key={post.id}\n                  handleSubmit={this.handleSubmit}\n                  handleChange={this.handleChange}\n                  comment={postsMap.comment}\n                />\n              ))\n            }\n          </div>\n\n        </div>\n      );\n    }\n}\n\nListOfPosts.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  handlePostRemote: PropTypes.func.isRequired,\n  renamePosts: PropTypes.func.isRequired,\n};\n\nexport default ListOfPosts;\n","export const loadPosts = async() => {\n  let loadedData = await fetch('https://bloggy-api.herokuapp.com/posts');\n\n  loadedData = await loadedData.json();\n\n  return loadedData;\n};\n\nexport const loadComments = async() => {\n  let loadedData = await fetch('https://bloggy-api.herokuapp.com/comments');\n\n  loadedData = await loadedData.json();\n\n  return loadedData;\n};\n","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport ListOfPosts from './ListOfPosts';\nimport './App.css';\nimport {\n  loadComments, loadPosts,\n} from './loadData';\n\nclass App extends React.Component {\n  state = {\n    isLoaded: false,\n    isLoading: false,\n    posts: [],\n  };\n\n  handleClick = async() => {\n    const comments = await loadComments();\n    const posts = await loadPosts();\n    const WhitpostAndComments = posts.map(post => ({\n      postItem: post,\n      postComments: comments.filter(comment => comment.postId === post.id),\n    }));\n\n    this.setState({\n      posts: WhitpostAndComments,\n      isLoading: true,\n    });\n\n    setTimeout(() => {\n      this.setState({\n        isLoaded: true,\n        isLoading: false,\n      });\n    }, 10);\n  };\n\n      renamePosts = (newTitle, id) => {\n        this.setState(prevState => ({\n          posts: [\n            ...prevState.posts.map((post) => {\n              if (post.postItem.id === id) {\n                return {\n                  ...post,\n                  postItem: {\n                    ...post.postItem,\n                    title: newTitle,\n                  },\n                };\n              }\n\n              return post;\n            }),\n          ],\n        }));\n      };\n\n  addPost = (postsMap) => {\n    this.setState(prevState => ({\n      posts: [\n        ...prevState.posts,\n        {\n          postItem: {\n            title: postsMap.title,\n            body: postsMap.body,\n            id: Date.now(),\n          },\n          postComments: postsMap.comment,\n        },\n      ],\n    }));\n  };\n\n  handlePostRemote = (id, operation) => {\n    this.setState((prevState) => {\n      let currentArray = [...prevState.posts];\n\n      // eslint-disable-next-line default-case\n      switch (operation) {\n        case 'remove':\n          currentArray = currentArray.filter(obj => obj.postItem.id !== id);\n          break;\n      }\n\n      return {\n        posts: currentArray,\n      };\n    });\n  }\n\n  render() {\n    const { posts } = this.state;\n\n    return (\n      <main className=\"main\">\n        {\n          !this.state.isLoaded\n            ? (\n              <Button\n                type=\"button\"\n                className=\"load-btn\"\n                onClick={this.handleClick}\n              >\n                {this.state.isLoading ? 'Loading...' : 'Load'}\n              </Button>\n            ) : (\n              <>\n                <ListOfPosts\n                  posts={posts}\n                  onSubmit={this.addPost}\n                  renamePosts={this.renamePosts}\n                  handlePostRemote={this.handlePostRemote}\n                />\n              </>\n            )\n        }\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}